% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ppmdata.R
\name{ppmData}
\alias{ppmData}
\title{Create a spatial point Process dataset for spatial modelling.}
\usage{
ppmData(
  npoints = 10000,
  presences = NULL,
  window = NULL,
  covariates = NULL,
  coord = c("X", "Y"),
  mc.cores = parallel::detectCores() - 1,
  quasirandom.samples = NULL
)
}
\arguments{
\item{npoints}{The number of quadrature points to generate.}

\item{presences}{a matrix, dataframe or SpatialPoints object giving the coordinates of each species' presence in (should be a matrix of nsites * 3)
with the three columns being c("X","Y","SpeciesID"), where X is longitude, Y is latitude and SpeciesID is a integer, character or factor which assoicates each point to a species.
If presences parameter is NULL then ppmDat will return the quadrature (background) points without presences.}

\item{window}{a Raster* object giving the area over which to generate background points. NA cells are ignored and masked out of returned data.
If ignored, a rectangle defining the extent of \code{presences} will be used.}

\item{covariates}{A Raster* object containing covariates for modelling the point process (best use a Raster stack or Raster brick).}

\item{coord}{is the name of site coordinates. The default is c('X','Y').}

\item{mc.cores}{The number of cores to use in the processing to quasirandom points and weighting scheme.}

\item{quasirandom.samples}{This set the total number of samples to consider in the BAS step (rejection sampling).
The default is 10000, which means that 10000 halton numbers are drawn and then thinned according to the inclusion probabilities.
You will need to increase the number of samples if sampling across > 2 dimensions or selecting a large number of background points.
The more quasirandomSample selected the slower the background point generation will be.}
}
\description{
Creates a point process data object for modelling Point Process presence-only datasets.
The approach uses quasi-random sampling to generate a quadrature scheme based (e.g Berman & Turner 1992; Warton & Shepard 2010).
The weights each quasi-random point represents is calculated using a dirichlet tesselation (Turner 2020).
To improve comptational efficiency of the using the deldir (Turner 2020) function for a large number of points,
we break the study area up into subregions. We do this, to keep the number point per deldir run at < 5000 pts
(which appears to be the point where the algorithm slowes noticibly). To avoid edge effect (large areas on the edges of sub-areas),
we rotate the subregions three times, the first time using the two primate number closest to (number of total quadrature points/5000)
The function can generate a quadrature scheme for a regular grid, quasi-random or random points.
}
\details{
This package is a way to efficiently generate a quasirandom set of background points for presence-only modelling of single or multiple respones. The package was set up to model muliple species presence-only datasets, but could be used for an point process spatial modelling.
Quasirandom points are a nice alternative to pseudorandom samples, this is because we can generate a quasirandom sample across and areal region (X and Y coordinates), but we can also extend the dimensions of the quasirandom sample to a N-dimensional hypervolume, which will allow users to effectively sample the spatial and environmental space.
This in turn should reduce autocorrelation in quadrature scheme. The weight of each quadrature point is calculated using Dirichlet (Voronoi) Tessellation.
}
\examples{
library(ppmData)
path <- system.file("extdata", package = "ppmData")
lst <- list.files(path=path,pattern='*.tif',full.names = TRUE)
preds <- raster::stack(lst)
presences <- subset(snails,SpeciesID \%in\% "Tasmaphena sinclairi")
bkgrid <- ppmData(npoints = 1000, presences=presences, window = preds[[1]], covariates = preds)
}
